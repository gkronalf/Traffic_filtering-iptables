---

- hosts: all
  become: true

  # vars:
  #   variable1: 'Test line 1'
  #   variable2: 'Test line 2'

  tasks:
    
    - name: "Install ifupdown"
      ansible.builtin.apt:
        name: ifupdown
        update_cache: yes
      when: (ansible_hostname == "inetRouter" or ansible_hostname == "inetRouter2")

    - name: "Install nginx"
      ansible.builtin.apt:
        name: nginx
        update_cache: yes
      when: (ansible_hostname == "centralServer")
    # ------------------------------------------
    # SSH block
    - name: "Ssh-keygen"
      ansible.builtin.user:
        name: vagrant
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
      when: (ansible_hostname == "centralRouter")

    - name: "Copy ssh-key on server"
      fetch:
        src: /home/vagrant/.ssh/id_rsa.pub
        dest: key/id_rsa.pub
        flat: true
      when: (ansible_hostname == "centralRouter")

    - name: "Create directory .ssh"
      ansible.builtin.file:
        path: /home/vagrant/.ssh/
        owner: vagrant
        group: vagrant
        mode: '0700'
        state: directory
      when: (ansible_hostname == "inetRouter")
    
    - name: "Create file-key .ssh"
      ansible.builtin.file:
        path: /home/vagrant/.ssh/authorized_keys
        owner: vagrant
        group: vagrant
        mode: '0600'
        state: touch
      when: (ansible_hostname == "inetRouter")

    - name: "Copy ssh-key"
      copy:
        src: key/id_rsa.pub
        dest: /home/vagrant/.ssh/vagrant.pub
      when: (ansible_hostname == "inetRouter")

    - name: "Add ssh-key into authorized_keys"
      shell: "cat /home/vagrant/.ssh/vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
      when: (ansible_hostname == "inetRouter")

    # ------------------------------------------

    - name: "Set up NAT on inetRouter"
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.mode }}"
      with_items:
        - { src: "template/iptables_rules.ipv4", dest: "/etc/iptables_rules.ipv4", mode: "0644" }
        - { src: "template/iptables_restore", dest: "/etc/network/if-pre-up.d/iptables", mode: "0755" }
      when: (ansible_hostname == "inetRouter")

    - name: set up forward packages across routers
      sysctl:
        name: net.ipv4.conf.all.forwarding
        value: '1'
        state: present
      when: "'routers' in group_names"

    - name: disable default route
      ansible.builtin.template: 
        src: template/00-installer-config.yaml
        dest: /etc/netplan/00-installer-config.yaml
        owner: root
        group: root
        mode: 0644
      when: (ansible_hostname == "centralServer" or ansible_hostname == "centralRouter") 

    - name: add default gateway for centralRouter
      ansible.builtin.template:
        src: template/50-vagrant_{{ansible_hostname}}.yaml
        dest: /etc/netplan/50-vagrant.yaml
        owner: root
        group: root
        mode: 0644

    - name: restart all hosts
      reboot:
        reboot_timeout: 300